{
  "openapi": "3.0.1",
  "info": {
    "title": "Automated Car-Parking",
    "description": "",
    "contact": {
      "name": "Automated Car-Parking ",
      "url": "https://github.com/sembrava-qualcuno/issLab21"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "client",
      "description": "Client request to enter the system"
    },
    {
      "name": "parkingArea",
      "description": "The parking area status"
    }
  ],
  "paths": {
    "/client/reqenter": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Request to enter a car",
        "description": "The client request to park his/her car",
        "operationId": "reqenter",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingSlot"
                }
              }
            }
          },
          "403": {
            "description": "The service can't perform this operation at the moment:\n- The trolley is stopped\n- The indoor area is engaged",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Indoor area engaged": {
                    "value": {
                      "code": 1,
                      "message": "The indoor area is engaged"
                    }
                  },
                  "Trolley stopped": {
                    "value": {
                      "code": 7,
                      "message": "The trolley is stopped"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/client/carenter": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Enter a car",
        "operationId": "carenter",
        "parameters": [
          {
            "name": "slotnum",
            "in": "query",
            "description": "The parking slot number",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenId"
                },
                "example": {
                  "tokenid": "112082021090000"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parking slot number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 3,
                  "message": "Invalid parking slot number"
                }
              }
            }
          },
          "403": {
            "description": "The service can't perform this operation at the moment:\n- The indoor area is free",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 2,
                  "message": "The indoor area is free"
                }
              }
            }
          }
        }
      }
    },
    "/client/reqexit": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Request to exit a car",
        "operationId": "reqexit",
        "parameters": [
          {
            "name": "tokenid",
            "in": "query",
            "description": "The client's car corresponding tokenId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid tokenId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 4,
                  "message": "Invalid tokenid"
                }
              }
            }
          },
          "403": {
            "description": "The service can't perform this operation at the moment:\n- The trolley is stopped\n- The outdoor area is engaged",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Outdoor area engaged": {
                    "value": {
                      "code": 5,
                      "message": "The outdoor area is engaged"
                    }
                  },
                  "Trolley stopped": {
                    "value": {
                      "code": 6,
                      "message": "The trolley is stopped"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/parkingArea": {
      "get": {
        "tags": [
          "parkingArea"
        ],
        "summary": "Get the parking area state",
        "description": "An authenticated manager can check out the parking area state:\n- fan state\n- temperature\n- trolley state",
        "operationId": "getParkingArea",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingArea"
                }
              }
            }
          }
        }
      }
    },
    "/parkingArea/trolley": {
      "put": {
        "tags": [
          "parkingArea"
        ],
        "summary": "Update the current trolley status",
        "description": "An authenticated manager can start or stop the trolley",
        "operationId": "updateTrolley",
        "requestBody": {
          "description": "Trolley state that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trolley"
              },
              "examples": {
                "Stop the trolley": {
                  "value": {
                    "state": "stop"
                  }
                },
                "Resume the trolley": {
                  "value": {
                    "state": "resume"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid state supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 8,
                  "message": "Bad Request"
                }
              }
            }
          },
          "403": {
            "description": "The service can't perform this operation at the moment:\n- The temperature is not high enough",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 9,
                  "message": "Forbidden: temperature is not high enough!"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "ParkingSlot": {
        "required": [
          "parkingSlot"
        ],
        "type": "object",
        "properties": {
          "parkingSlot": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "TokenId": {
        "required": [
          "tokenId"
        ],
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "string",
            "example": "112082021090000"
          }
        }
      },
      "Trolley": {
        "required": [
          "state"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "example": "stop"
          }
        }
      },
      "ParkingArea": {
        "required": [
          "fan",
          "temperature",
          "trolley"
        ],
        "type": "object",
        "properties": {
          "fan": {
            "type": "string",
            "example": "off"
          },
          "temperature": {
            "type": "number",
            "example": 25
          },
          "trolley": {
            "type": "string",
            "example": "idle"
          }
        }
      },
      "ApiError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    }
  }
}